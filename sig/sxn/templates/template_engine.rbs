# TypeProf 0.21.3

module Sxn
  module Templates
    class TemplateEngine
      # Built-in template directory
      TEMPLATES_DIR: String

      @session: untyped
      @project: untyped
      @config: untyped
      @processor: TemplateProcessor
      @variables_collector: TemplateVariables
      @security: TemplateSecurity
      @template_cache: Hash[untyped, untyped]

      def initialize: (?session: untyped, ?project: untyped, ?config: untyped) -> void

      def process_template: (String template_name, String destination_path, ?Hash[untyped, untyped] custom_variables, ?Hash[Symbol, untyped] options) -> String

      def list_templates: (?String? category) -> Array[String]

      def template_categories: () -> Array[String]

      def template_exists?: (String template_name, ?String? template_dir) -> bool

      def template_info: (String template_name, ?String? template_dir) -> Hash[Symbol, untyped]

      def validate_template_syntax: (String template_name, ?String? template_dir) -> bool

      def available_variables: (?Hash[untyped, untyped] custom_variables) -> Hash[untyped, untyped]

      def refresh_variables!: () -> Hash[untyped, untyped]

      def clear_cache!: () -> void

      def process_string: (String template_content, ?Hash[untyped, untyped] custom_variables, ?Hash[Symbol, untyped] options) -> String

      def render_template: (String template_name, ?Hash[untyped, untyped] variables, ?Hash[Symbol, untyped] options) -> String

      def apply_template_set: (String template_set, String destination_dir, ?Hash[untyped, untyped] custom_variables, ?Hash[Symbol, untyped] options) -> Array[String]

      private

      def find_template: (String template_name, ?String? custom_template_dir) -> String

      def collect_variables: (?Hash[untyped, untyped] custom_variables) -> Hash[untyped, untyped]
    end
  end
end