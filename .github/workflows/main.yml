name: Ruby

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }} - Parallel ${{ matrix.ci_node_index }}/${{ matrix.ci_node_total }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.4.5'
        # Run tests in parallel across 4 jobs
        ci_node_total: [4]
        ci_node_index: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          
      # Restore runtime log from cache for balanced test distribution
      - name: Restore runtime log
        uses: actions/cache@v3
        id: runtime-cache
        with:
          path: tmp/parallel_runtime_rspec.log
          key: ${{ runner.os }}-runtime-log-${{ hashFiles('spec/**/*_spec.rb') }}
          restore-keys: |
            ${{ runner.os }}-runtime-log-
            
      - name: Create tmp directory for parallel tests
        run: mkdir -p tmp
        
      # Generate initial runtime log if not cached
      - name: Generate runtime log if missing
        if: steps.runtime-cache.outputs.cache-hit != 'true'
        env:
          TEST_ENV_NUMBER: 1
        run: |
          echo "No runtime log found in cache, generating initial runtime log..."
          bundle exec rspec --format progress --format ParallelTests::RSpec::RuntimeLogger --out tmp/parallel_runtime_rspec.log spec/unit spec/integration spec/performance || true
        
      - name: Run parallel tests
        env:
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          RAILS_ENV: test
        run: |
          bundle exec parallel_test spec/unit spec/integration spec/performance \
            --type rspec \
            --only-group ${{ matrix.ci_node_index + 1 }} \
            --runtime-log tmp/parallel_runtime_rspec.log
            
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.ruby }}-${{ matrix.ci_node_index }}
          path: |
            tmp/parallel_runtime_rspec.log
            coverage/
          retention-days: 7
          
      # Save updated runtime log for next run (only from first node to avoid conflicts)
      - name: Save runtime log
        if: always() && matrix.ci_node_index == 0
        uses: actions/cache@v3
        with:
          path: tmp/parallel_runtime_rspec.log
          key: ${{ runner.os }}-runtime-log-${{ hashFiles('spec/**/*_spec.rb') }}

  # Separate job for linting and type checking
  lint:
    runs-on: ubuntu-latest
    name: Lint & Type Check
    
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'
          bundler-cache: true
          
      - name: Run RuboCop
        run: bundle exec rubocop
        
      - name: Run Steep type checking
        run: bundle exec steep check

  # Job to aggregate test results
  test-summary:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    name: Test Summary
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test.result }}" == "failure" || "${{ needs.lint.result }}" == "failure" ]]; then
            echo "Tests or linting failed"
            exit 1
          fi
          echo "All checks passed!"